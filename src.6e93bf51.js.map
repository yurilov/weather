{"version":3,"sources":["js/getRefs.js","js/weather.js","js/renderWeather.js","js/getLocation.js","index.js"],"names":["refs","tempDegree","document","querySelector","body","tempDescr","icon","locationCity","fetchWeather","long","lat","fetch","then","response","ok","Error","status","json","renderWeather","main","name","weather","console","log","textContent","Math","round","temp","description","src","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","catch","error"],"mappings":";;;AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,MAAMA,EAAO,CAClBC,WAAYC,SAASC,cAAc,uBACnCC,KAAMF,SAASC,cAAc,QAC7BE,UAAWH,SAASC,cAAc,4BAClCG,KAAMJ,SAASC,cAAc,SAC7BI,aAAcL,SAASC,cAAc,uBALhC,QAAA,KAAA;;ACQN,aARM,SAASK,EAAaC,EAAMC,GAE1BC,OAAAA,6DAD4DD,SAAWD,iEAC5DG,KAAKC,IACjB,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,SAEnB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAPD,IAAA,EAAA,QAAA,aACO,SAASC,GAAc,KAAEC,EAAF,KAAQC,EAAR,QAAcC,IAC1CC,QAAQC,OAAOF,GACVpB,EAAAA,KAAAA,WAAWuB,YAAcC,KAAKC,MAAMP,EAAKQ,MACzCpB,EAAAA,KAAAA,aAAaiB,YAAcJ,EAC3Bf,EAAAA,KAAAA,UAAUmB,YAAcH,EAAQ,GAAGO,YACnCtB,EAAAA,KAAAA,KAAKuB,yCAA2CR,EAAQ,GAAGf;;ACMjE,aAZD,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,aACA,EAAA,QAAA,mBAEIwB,UAAUC,aACZD,UAAUC,YAAYC,mBAAmBC,IACjCxB,MAAAA,EAAOwB,EAASC,OAAOC,UAC7Bb,QAAQC,IAAI,OAAQd,GACdC,MAAAA,EAAMuB,EAASC,OAAOE,SAC5Bd,QAAQC,IAAI,MAAOb,IACND,EAAAA,EAAAA,cAAAA,EAAMC,GAAKE,KAAKM,EAA7B,eAA4CmB,MAAMf,QAAQgB;;ACT9D,aADA,QAAA,oBACA,QAAA","file":"src.6e93bf51.js","sourceRoot":"../src","sourcesContent":["export const refs = {\n  tempDegree: document.querySelector('.temperature-degree'),\n  body: document.querySelector('body'),\n  tempDescr: document.querySelector('.temperature-description'),\n  icon: document.querySelector('.icon'),\n  locationCity: document.querySelector('.location-timezone'),\n};\n","export function fetchWeather(long, lat) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=7ebcf861e909a4853a0d8e23d058e7cf&units=metric&lang=en`;\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n","import { refs } from './getRefs';\nexport function renderWeather({ main, name, weather }) {\n  console.log(...weather);\n  refs.tempDegree.textContent = Math.round(main.temp);\n  refs.locationCity.textContent = name;\n  refs.tempDescr.textContent = weather[0].description;\n  refs.icon.src = `https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\n}\n","import { refs } from './getRefs';\nimport { fetchWeather } from './weather';\nimport { renderWeather } from './renderWeather';\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(position => {\n    const long = position.coords.longitude;\n    console.log('long', long);\n    const lat = position.coords.latitude;\n    console.log('lat', lat);\n    fetchWeather(long, lat).then(renderWeather).catch(console.error);\n  });\n}\n","import './sass/main.scss';\nimport './js/getLocation';\n"]}